#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/international_chars/swedish.dtsi"
#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2

#define XXX &none
#define ___ &trans

/* Global settings */

#define QUICK_TAP_MS 175

&sk {  // sticky-key config
    release-after-ms = <900>;  // release after 0.6s
    quick-release;             // no double capitalization when rolling keys
};

&sl {  // sticky-layer config
    ignore-modifiers;          // allow chording sticky mods & layers
};

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_BEHAVIOR(NAME, hold_tap, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )

MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs

MAKE_HRM(hml_repeat, &kp, &key_repeat, KEYS_R THUMBS)  // used for HRM-combo

ZMK_LAYER(base,
// ╭─────────────┬────────────┬────────────┬────────────┬────────────┬─────────────╮   ╭─────────────┬─────────────┬────────────┬────────────┬────────────┬─────────────╮
      &kp TAB      &kp Q        &kp W         &kp E         &kp R          &kp T          &kp Y         &kp U         &kp I         &kp O       &kp P            &sv_ae        
// ├─────────────┼────────────┬────────────┼────────────┼────────────┼─────────────┤   ├─────────────┼─────────────┼────────────┼────────────┼────────────┼─────────────┤
      &kp LCTRL    &hml LGUI A  &hml LALT S   &hml LCTRL D  &hml LSHFT F   &kp G          &kp H         &hmr RSHFT J  &hmr LCTRL K  &hmr LALT L &sv_oe           &sv_ao
// ├─────────────┼────────────┬────────────┼────────────┼────────────┼─────────────┤   ├─────────────┼─────────────┼────────────┼────────────┼────────────┤─────────────┤
      &kp LSHIFT    &kp Z       &kp X         &kp C         &kp V          &kp B          &kp N         &kp M         &kp COMMA     &kp DOT     &kp SEMI         &SLASH 
// ╰─────────────┼────────────┬────────────┼────────────┼────────────┼─────────────┤   ├─────────────┼─────────────┼────────────┼────────────┼────────────┤─────────────┤
                                              &kp ESC     &kp SPACE        &kp TAB        &kp DEL       &kp RET       &kp LALT 
//                                         ╰────────────┴────────────┴─────────────╯   ╰─────────────┴─────────────┴────────────╯
)

